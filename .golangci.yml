version: "2"
run:
  concurrency: 6
linters:
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - forcetypeassert
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoinits
    - gochecksumtype
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goheader
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosmopolitan
    - govet
    - grouper
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - ireturn
    - loggercheck
    - makezero
    - mirror
    - misspell
    - musttag
    - nakedret
    - nilerr
    - noctx
    - nolintlint
    - nosprintfhostport
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - sqlclosecheck
    - staticcheck
    - tagalign
    - testableexamples
    - testifylint
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
    - zerologlint
    # - cyclop
    # - depguard
    # - exhaustruct
    # - forbidigo
    # - funlen
    # - gochecknoglobals
    # - gocognit
    # - gomnd
    # - gosec
    # - lll
    # - maintidx
    # - nestif
    # - nilnil
    # - nlreturn
    # - nonamedreturns
    # - paralleltest
    # - tagliatelle
    # - testpackage
    # - varnamelen
    # - wrapcheck
    # - wsl
  settings:
    errcheck:
      check-type-assertions: true
      check-blank: true
    gocritic:
      enabled-checks:
        - appendAssign
        - appendCombine
        - argOrder
        - assignOp
        - badCall
        - badCond
        - badLock
        - badRegexp
        - badSorting
        - boolExprSimplify
        - builtinShadow
        - builtinShadowDecl
        - captLocal
        - caseOrder
        - codegenComment
        - commentFormatting
        - commentedOutCode
        - commentedOutImport
        - defaultCaseOrder
        - deferInLoop
        - deferUnlambda
        - deprecatedComment
        - docStub
        - dupArg
        - dupBranchBody
        - dupCase
        - dupImport
        - dupSubExpr
        - dynamicFmtString
        - elseif
        - emptyDecl
        - emptyFallthrough
        - emptyStringTest
        - equalFold
        - evalOrder
        - exitAfterDefer
        - exposedSyncMutex
        - externalErrorReassign
        - filepathJoin
        - flagDeref
        - flagName
        - hexLiteral
        - httpNoBody
        - hugeParam
        - ifElseChain
        - importShadow
        - indexAlloc
        - initClause
        - mapKey
        - methodExprCall
        - nestingReduce
        - newDeref
        - nilValReturn
        - octalLiteral
        - offBy1
        - paramTypeCombine
        - preferDecodeRune
        - preferFilepathJoin
        - preferFprint
        - preferStringWriter
        - preferWriteByte
        - ptrToRefParam
        - rangeExprCopy
        - rangeValCopy
        - redundantSprint
        - regexpMust
        - regexpPattern
        - regexpSimplify
        - returnAfterHttpError
        - ruleguard
        - singleCaseSwitch
        - sliceClear
        - sloppyLen
        - sloppyReassign
        - sloppyTypeAssert
        - sortSlice
        - sprintfQuotedString
        - sqlQuery
        - stringConcatSimplify
        - stringXbytes
        - stringsCompare
        - switchTrue
        - syncMapLoadAndDelete
        - timeExprSimplify
        - todoCommentWithoutDetail
        - tooManyResultsChecker
        - truncateCmp
        - typeAssertChain
        - typeDefFirst
        - typeSwitchVar
        - typeUnparen
        - uncheckedInlineErr
        - underef
        - unlabelStmt
        - unlambda
        - unnamedResult
        - unnecessaryBlock
        - unnecessaryDefer
        - unslice
        - valSwap
        - weakCond
        - whyNoLint
        - wrapperFunc
        - yodaStyleExpr
    godox:
      keywords:
        - BUG
        - FIXME
        - HACK
    nolintlint:
      require-explanation: false
      require-specific: true
      allow-unused: false
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - dupl
          - gocritic
          - golint
        # counterfeiter fakes are usually named 'fake_<something>.go'
        path: fake_.*\.go
      - linters:
          - err113
        text: do not define dynamic errors
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0
  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0
formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
